# coding: utf-8

"""
    Kenjo API

    Before starting to use the Kenjo API, you have to request the API activation for a sandbox or production environment to the Kenjo Customer Success team. After that, an admin user has to go to *Settings > Integrations > API keys*, to generate the **API Key**. Follow the steps described in the **Autentication section** of this document. <br>The API key is needed to request the bearer token. Each endpoint callout requires a valid bearer token in the Authorization header. Once the token is retrieved, it will be useful during the time limit indicated by the 'expiration date'.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from kenjo_python_sdk.pydantic.attendance_get_by_id_response_breaks import AttendanceGetByIdResponseBreaks

class AttendanceGetByIdResponse(BaseModel):
    # The _id of the requested attendance entry.
    _id: typing.Optional[str] = Field(None, alias='_id')

    # The id of the employee associated to the requested attendance entry.
    user_id: typing.Optional[str] = Field(None, alias='userId')

    # The email of the employee associated to the requested attendance entry.
    email: typing.Optional[str] = Field(None, alias='email')

    # The external Id of the employee associated to the requested attendance entry.
    external_id: typing.Optional[str] = Field(None, alias='externalId')

    # The start date time of the requested attendance entry.
    start_time: typing.Optional[str] = Field(None, alias='startTime')

    # The end date time of the requested attendance entry.
    end_time: typing.Optional[str] = Field(None, alias='endTime')

    breaks: typing.Optional[AttendanceGetByIdResponseBreaks] = Field(None, alias='breaks')

    # Number of minutes of break time. If there is no 'breaktime' this field will not be in the response. This value is the sum of the total time of breaks.
    break_time: typing.Optional[typing.Union[int, float]] = Field(None, alias='breakTime')

    # The Kenjo _id of the attendance category.
    attendance_category_id: typing.Optional[str] = Field(None, alias='attendanceCategoryId')

    # The Kenjo _id of the attendance sub category.
    attendance_sub_category_id: typing.Optional[str] = Field(None, alias='attendanceSubCategoryId')

    # Optional text to describe an attendance record (pair of startTime and endTime). The maximum number of characters is 150.
    comment: typing.Optional[str] = Field(None, alias='comment')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
